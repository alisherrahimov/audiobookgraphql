# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

type File {
  encoding: String!
  filename: String!
  mimetype: String!
}
input forgetPassword {
  email: String
}

input getByCategory {
  id: String
}

type ResponseType {
  error: Boolean!
  message: String!
}
input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  active(email: String, code: Int): Boolean
  createBook(input: bookInput): book
  createCategory(name: String!): category
  createReview(bookId: ID!, content: String!, userID: String!): review
  createUser(input: userInput!): user
  interest(input: interestCategory): Boolean
  login(input: LoginInput!): ResponseType!
  myBooks(input: book_id): [book]
  register(
    email: String
    date: String
    password: String
    username: String
  ): ResponseType
  searchBook(author: String, title: String): [book]
  resetPassword(email: String, password: String): ResponseType
  checkCode(email: String, code: Int): Boolean
  forgetPassword(email: String): ResponseType
  getBookByCategory(input: getByCategory): [book]
}

type Query {
  book(id: ID!): book
  books: [book]
  categories: [category]
  category(id: ID!): category
  deleteUser(id: ID!): user
  home: home
  review(id: ID!): review
  reviews: [review]
  user(id: ID!): user
  users: [user]
}

type book {
  audio_link: String
  author: String
  book_link: String
  category: [category]
  createdAt: Date
  description: String
  downloads: Int
  id: ID
  image: String
  page: Int
  review: [review]
  star: Int
  title: String
  updatedAt: Date
}

type category {
  createdAt: Date
  id: ID
  name: String
  updatedAt: Date
}

type home {
  bestseller: [book]
  new_release: [book]
  recommended: [book]
  trend: [book]
}

type review {
  book: book
  content: String
  createdAt: Date!
  id: ID
  updatedAt: Date!
  user: user
}

type user {
  active: Boolean
  birthday: Date
  code: Int
  createdAt: Date
  email: String
  id: ID
  image: String
  interest: [category]
  mybooks: [book]
  password: String
  reviews: [review]
  sub_end: Date
  subscription: Boolean
  updatedAt: Date
  username: String
}

scalar Date

input active {
  code: Int
  email: String
}

input checkCode {
  email: String
  code: Int
}

input bookInput {
  audio_link: String
  author: String
  book_link: String
  description: String
  image: String
  page: Int
  title: String
  category: [String]
}
input resetPassword {
  email: String
  password: String
}

input book_id {
  id: [String]
}

input interestCategory {
  id: [String]
}

input login {
  email: String
  password: String
}

input register {
  date: Date
  email: String
  password: String
  username: String
}

input userInput {
  birthday: Date
  email: String
  password: String
  username: String
}
